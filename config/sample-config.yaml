id: "follower"
tenant: "test-tenant"
port: 8081
namespace: "default"

# Storage configuration
storageType: "redis"
redis:
  addr: "localhost:6379"
  password: ""
  db: 0

# Cluster configuration
cluster:
  name: "docker-desktop"
  kubeconfig: "/Users/shahzadbhatti/.kube/config"

# Workloads configuration
workloads:
  processes:
    # Regular process configuration
    - name: "singleton-echo"
      image: "busybox:latest"
      script:
        commands:
          - "echo 'Starting singleton process'"
          - "echo 'Process ID: $$'"
          - "while true; do echo \"Regular process heartbeat at $(date)\"; sleep 10; done"
        shell: "/bin/sh"
      env:
        TEST_ENV: "regular-value"
      resources:
        cpuRequest: "100m"
        memoryRequest: "64Mi"
        cpuLimit: "200m"
        memoryLimit: "128Mi"
      restartPolicy: "Never"

    # CRD-based process configuration
    - name: "crd-echo"
      # Minimal config since we'll get most from CRD
      image: "busybox:latest"  # Fallback image
      script:
        commands:
          - "echo 'Fallback script'"
        shell: "/bin/sh"
      workloadCRDRef:
        apiVersion: "highlander.plexobject.io/v1"
        kind: "WorkloadProcess"
        name: "crd-process"
        namespace: "default"

  cronJobs:
    # Regular cronjob configuration
    - name: "singleton-cron"
      schedule: "*/1 * * * *"
      image: "busybox:latest"
      script:
        commands:
          - "echo 'Running regular cron job at $(date)'"
          - "echo 'Hostname: $(hostname)'"
          - "sleep 15"
        shell: "/bin/sh"
      env:
        TEST_ENV: "regular-value"
      resources:
        cpuRequest: "50m"
        memoryRequest: "32Mi"
        cpuLimit: "100m"
        memoryLimit: "64Mi"
      restartPolicy: "OnFailure"

    # CRD-based cronjob configuration
    - name: "crd-cron"
      schedule: "*/5 * * * *"  # Fallback schedule
      image: "busybox:latest"  # Fallback image
      script:
        commands:
          - "echo 'Fallback script'"
        shell: "/bin/sh"
      workloadCRDRef:
        apiVersion: "highlander.plexobject.io/v1"
        kind: "WorkloadCronJob"
        name: "crd-cronjob"
        namespace: "default"

  services:
    # Regular service configuration
    - name: "singleton-service"
      replicas: 1
      image: "nginx:alpine"
      script:
        commands:
          - "nginx -g 'daemon off;'"
        shell: "/bin/sh"
      ports:
        - name: "http"
          containerPort: 80
          servicePort: 8181
      resources:
        cpuRequest: "100m"
        memoryRequest: "64Mi"
        cpuLimit: "200m"
        memoryLimit: "128Mi"

    # CRD-based service configuration
    - name: "crd-service-frontend"
      replicas: 1  # Fallback replicas
      image: "nginx:alpine"  # Fallback image
      script:
        commands:
          - "nginx -g 'daemon off;'"
        shell: "/bin/sh"
      workloadCRDRef:
        apiVersion: "highlander.plexobject.io/v1"
        kind: "WorkloadService"
        name: "crd-service"
        namespace: "default"

  persistentSets:
    # Regular persistent configuration
    - name: "singleton-persistent"
      replicas: 1
      image: "redis:alpine"
      script:
        commands:
          - "redis-server"
        shell: "/bin/sh"
      ports:
        - name: "redis"
          containerPort: 6379
          servicePort: 6379
      persistentVolumes:
        - name: "data"
          mountPath: "/data"
          size: "1Gi"
      resources:
        cpuRequest: "100m"
        memoryRequest: "128Mi"
        cpuLimit: "200m"
        memoryLimit: "256Mi"

    # CRD-based persistent configuration
    - name: "crd-persistent-db"
      replicas: 1  # Fallback replicas
      image: "redis:alpine"  # Fallback image
      script:
        commands:
          - "redis-server"
        shell: "/bin/sh"
      workloadCRDRef:
        apiVersion: "highlander.plexobject.io/v1"
        kind: "WorkloadPersistent"
        name: "crd-persistent"
        namespace: "default"
